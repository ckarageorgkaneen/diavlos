openapi: 3.0.0
info:
  version: 1.0.0
  title: Diavlos API
  description: An API for managing Diavlos, the Greek National Service Registry
externalDocs:
  description: Περισσότερες πληροφορίες για τον Δίαυλο, το Εθνικό Μητρώο Διαδικασιών
  url: https://reg-diavlos.gov.gr
servers:
  - url: http://reg-diavlos.gov.gr:5000/v1
    description: Public production server url
tags:
- name: services
  description: Διαδικασίες
- name: organizations
  description: Φορείς
- name: paravolo
  description: Παράβολα
- name: metadata
  description: Μεταδεδομένα
paths:
  /services:
    get:
      tags:
        - services
      summary: Get all services
      description: Get all services
      operationId: api.get_all_services
      parameters:
        - name: include_info
          in: query
          description: Get all information of each service
          schema:
            type: boolean
          example: false
        - name: page_continue
          in: query
          description: Pagination key for continuing to the next results page
          schema:
            type: string
        - name: limit
          in: query
          description: Max limit of services to get
          schema:
            type: integer
          example: 50
      responses:
        '200':
          description: Success
  /services/name/{name}:
    get:
      tags:
        - services
      summary: Get service by name
      operationId: api.get_service_by_name
      parameters:
        - name: name
          in: path
          description: Service name
          required: true
          schema:
            type: string
          example: 120 δόσεις εργοδοτών
        - name: bpmn
          in: query
          description: Get the service's bpmn diagram XML
          schema:
            type: string
            enum: [manual, digital]
        - name: english
          in: query
          description: Get english service
          schema:
            type: boolean
      responses:
        '200':
          description: Success
  /services/id/{id}:
    get:
      tags:
        - services
      summary: Get service by id
      operationId: api.get_service_by_id
      parameters:
        - name: id
          in: path
          description: Service id
          required: true
          schema:
            type: integer
          example: 652718
        - name: bpmn
          in: query
          description: Get the service's bpmn diagram XML
          schema:
            type: string
            enum: [manual, digital]
        - name: english
          in: query
          description: Get english service
          schema:
            type: boolean
      responses:
        '200':
          description: Success
  /services/uuid/{uuid}:
    get:
      tags:
          - services
      summary: Get service by uuid
      operationId: api.get_service_by_uuid
      parameters:
        - name: uuid
          in: path
          description: Service uuid
          required: true
          schema:
            type: string
          example: 27a55a82-1167-46de-9f80-fda543cf8a12
        - name: bpmn
          in: query
          description: Get the service's bpmn diagram XML
          schema:
            type: string
            enum: [manual, digital]
        - name: english
          in: query
          description: Get english service
          schema:
            type: boolean
      responses:
        '200':
          description: Success
  /services/{name}/add:
    post:
      security:
        - basicAuth: []
      tags:
        - services
      summary: Add a new service to diavlos
      operationId: api.add_service
      parameters:
        - name: name
          in: path
          description: Service name
          required: true
          schema:
            type: string
          example: 120 δόσεις εργοδοτών
      requestBody:
        $ref: '#/components/requestBodies/serviceAdd'
      responses:
        '200':
          description: Success
  /services/name/{name}/update:
    put:
      security:
        - basicAuth: []
      tags:
        - services
      summary: Update service by name
      operationId: api.update_service_by_name
      parameters:
        - name: name
          in: path
          description: Service name
          required: true
          schema:
            type: string
          example: 120 δόσεις εργοδοτών
      requestBody:
        $ref: '#/components/requestBodies/serviceUpdate'
      responses:
        '200':
          description: Success
  /services/id/{id}/update:
    put:
      security:
        - basicAuth: []
      tags:
        - services
      summary: Update service by id
      operationId: api.update_service_by_id
      parameters:
        - name: id
          in: path
          description: Service id
          required: true
          schema:
            type: integer
          example: 652718
      requestBody:
        $ref: '#/components/requestBodies/serviceUpdate'
      responses:
        '200':
          description: Success

  /services/search:
    get:
      tags:
        - services
      summary: Search for property in services
      description: Search for property in services
      operationId: api.search_services
      parameters:
        - name: params
          in: query
          description: Parameters
          schema:
            type: string
          example: 'Process source::EU-GO'
        - name: offset
          in: query
          description: Pagination key for continuing to the next results page
          schema:
            type: integer
        - name: limit
          in: query
          description: Max limit of services to get, if 0 fetch all
          schema:
            type: integer
          example: 50
      responses:
        '200':
          description: Success
  /services/uuid/{uuid}/update:
    put:
      security:
        - basicAuth: []
      tags:
        - services
      summary: Update service by uuid
      operationId: api.update_service_by_uuid
      parameters:
        - name: uuid
          in: path
          description: Service uuid
          required: true
          schema:
            type: string
          example: 27a55a82-1167-46de-9f80-fda543cf8a12
      requestBody:
        $ref: '#/components/requestBodies/serviceUpdate'
      responses:
        '200':
          description: Success
  /organizations/units/{name}:
    get:
      tags:
        - organizations
      summary: Get organization units by name
      operationId: api.get_organization_units
      parameters:
        - name: name
          in: path
          description: Organization name
          required: true
          schema:
            type: string
          example: ΥΠΟΥΡΓΕΙΟ ΥΓΕΙΑΣ
        - name: types
          in: query
          description: Organization unit types
          schema:
            type: array
            items:
              type: integer
            minItems: 1
          style: form
          explode: false
          example: [3,4,12]
      responses:
        '200':
          description: Success
  /paravolo/{code}:
    get:
      tags:
        - paravolo
      summary: Get paravolo information by code
      operationId: api.get_paravolo
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: integer
          example: 7206
      responses:
        '200':
          description: Success
  /metadata/uuid/{uuid}/type/{type}:
    get:
      tags:
        - metadata
      summary: Get metadata service by uuid and type
      operationId: api.get_metadata
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
          example: 27a55a82-1167-46de-9f80-fda543cf8a12
        - name: type
          in: path
          required: true
          schema:
            type: string
          example: SDG
      responses:
        '200':
          description: Success
  /metadata/uuid/{uuid}/type/{type}/add:
    post:
      security:
        - basicAuth: []
      tags:
        - metadata
      summary: Add service metadata
      operationId: api.add_metadata
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
          example: 27a55a82-1167-46de-9f80-fda543cf8a12
        - name: type
          in: path
          required: true
          schema:
            type: string
          example: SDG
      requestBody:
        $ref: '#/components/requestBodies/metadataAdd'
      responses:
        '200':
          description: Success
  /metadata/uuid/{uuid}/type/{type}/update:
    put:
      security:
        - basicAuth: []
      tags:
        - metadata
      summary: Add service metadata
      operationId: api.update_metadata
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
          example: 27a55a82-1167-46de-9f80-fda543cf8a12
        - name: type
          in: path
          required: true
          schema:
            type: string
          example: SDG
      requestBody:
        $ref: '#/components/requestBodies/metadataUpdate'
      responses:
        '200':
          description: Success
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      x-basicInfoFunc: api.site_login
  requestBodies:
    serviceAdd:
      required: false
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/serviceAdd'
    serviceUpdate:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/serviceUpdate'
    metadataAdd:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/metadata'
    metadataUpdate:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/metadata'
  schemas:
    serviceAdd:
      $ref: services_add_schema.yaml
      example:
        process:
          - process_description: Περιγραφή δοκιμαστικής διαδικασίας.
        process_useful_links:
          - process_useful_link_title: Συχνές ερωτήσεις
            process_useful_link_url: 'https://www.efka.gov.gr/el/rythmise-opheilon-n-46112019-0'
          - process_useful_link_title: Επικοινωνία
            process_useful_link_url: 'https://www.eteaep.gov.gr/web/form#contact-form'
    serviceUpdate:
      $ref: services_update_schema.yaml
      example:
        process:
          1:
            process_description: Αλλαγμένη περιγραφή διαδικασίας
        process_useful_links:
          1:
            process_useful_link_title: Πολύ συχνές ερωτήσεις
            process_useful_link_url: 'https://www.efka.gov.gr/el/rythmise-opheilon-n-46112019-0'
          2:
            process_useful_link_title: ΕΠΙΚΟΙΝΩΝΙΑ
            process_useful_link_url: 'https://www.eteaep.gov.gr/web/form#contact-form'
          3:
            process_useful_link_title: Νέος σύνδεσμος
            process_useful_link_url: 'https://www.google.gr/'
    metadata:
      type: object
      properties:
        fields:
          type: object
      example:
        fields:
          first: hello
          second: world

